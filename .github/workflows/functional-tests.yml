---
name: Functional Tests

on: # yamllint disable-line rule:truthy
  push:
    branches:
      - main
  pull_request:
    paths:
      - .github/workflows/functional-tests.yml
      - src/**
      - action.yml
  schedule:
    # Every Friday at 09:00 JST
    - cron: "0 0 * * 5"
  workflow_dispatch: {}

defaults:
  run:
    shell: sh

jobs:
  get-versions:
    name: Get 3 latest versions
    runs-on: ubuntu-latest
    timeout-minutes: 5
    outputs:
      versions: ${{ steps.prepare-list.outputs.versions }}
    steps:
      - name: Prepare list
        id: prepare-list
        env:
          RELEASES_AMOUNT: "3"
          TARGET_PIP_PACKAGE: "brainfucky"
        run: |
          versions=$(curl -s "https://pypi.org/pypi/${TARGET_PIP_PACKAGE}/json" \
            | jq -c -r --arg n "${RELEASES_AMOUNT}" '.releases | keys | .[-($n | tonumber):] | . += ["latest"]')
          echo "versions=${versions}" >> "$GITHUB_OUTPUT"
  run-script:
    name: Run script
    needs: [get-versions]
    runs-on: ${{ matrix.os }}-latest
    timeout-minutes: 5
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu", "windows", "macos"]
        version: ${{ fromJSON(needs.get-versions.outputs.versions) }}
    steps:
      - name: Checkout ${{ github.repository }}
        uses: actions/checkout@v4
      - name: Setup brainfuck
        id: setup-brainfuck
        uses: ./
        with:
          version: "${{ matrix.version }}"
      - name: Test action completion
        run: |
          test_equal() {
            if [ "${2}" != "${3}" ]; then
              echo "::error title=${1}::Expected: ${3}. Actual: ${2}."
              exit 1
            fi
          }
          test_equal "setup-brainfuck should be installed" \
            "${{ steps.setup-setup-brainfuck.outputs.installed }}" \
            "true"
      - name: Validate command
        run: |
          {
            echo "++++++++[>++++[>++>+++>+++>+<<<<-]>+>+>->>+[<]<-]>>.>---.+++++++..+++.>>.<-.<.++"
            echo "+.------.--------.>>+.>++."
          } >> ./hello-world.bf
          [ "$(brainfucky --file ./hello-world.bf)" = "Hello World!" ] || exit 1
  test-force:
    name: Test force
    runs-on: ubuntu-latest
    timeout-minutes: 5
    strategy:
      fail-fast: false
      matrix:
        force: ["true", "false"]
    steps:
      - name: Checkout ${{ github.repository }}
        uses: actions/checkout@v4
      - name: Setup brainfuck 1
        id: setup-brainfuck-1
        uses: ./
      - name: Setup brainfuck 2
        id: setup-brainfuck-2
        uses: ./
        with:
          force: ${{ matrix.force }}
      - name: Test action completion
        run: |
          test_equal() {
            if [ "${2}" != "${3}" ]; then
              echo "::error title=${1}::Expected: ${3}. Actual: ${2}."
              exit 1
            fi
          }
          test_equal "Wrong \"installed\" output from setup-brainfuck-1" \
            "${{ steps.setup-brainfuck-1.outputs.installed }}" \
            "true"
          test_equal "Wrong \"installed\" output from setup-brainfuck-2" \
            "${{ steps.setup-brainfuck-2.outputs.installed }}" \
            "${{ matrix.force }}"
